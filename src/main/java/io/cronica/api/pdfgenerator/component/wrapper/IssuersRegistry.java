package io.cronica.api.pdfgenerator.component.wrapper;

import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint64;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple6;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.Callable;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.1.0.
 */
public class IssuersRegistry extends Contract {
    private static final String BINARY = "0x608060405260008054600160a060020a03191633179055611d00806100256000396000f3fe6080604052600436106100fb5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166301a55135811461010057806309277421146101a65780631da48bd01461023b5780633333ab001461030a57806338574670146103fc57806342ac87cf146105d757806349143c4b146106a65780634a7c6ea0146107755780635c707f07146107f25780636932cf81146108c157806369c05a991461093e57806380793ab8146109655780638da5cb5b14610c255780639e75528a14610c3a578063b864476b14610cb7578063bff9082114610ceb578063dcab453314610d68578063e86613a714610e37575b600080fd5b34801561010c57600080fd5b5061017d6004803603602081101561012357600080fd5b81019060208101813564010000000081111561013e57600080fd5b82018360208201111561015057600080fd5b8035906020019184600183028401116401000000008311171561017257600080fd5b509092509050610e61565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b3480156101b257600080fd5b50610239600480360360408110156101c957600080fd5b8101906020810181356401000000008111156101e457600080fd5b8201836020820111156101f657600080fd5b8035906020019184600183028401116401000000008311171561021857600080fd5b91935091503573ffffffffffffffffffffffffffffffffffffffff16610eab565b005b34801561024757600080fd5b506102396004803603604081101561025e57600080fd5b81019060208101813564010000000081111561027957600080fd5b82018360208201111561028b57600080fd5b803590602001918460018302840111640100000000831117156102ad57600080fd5b9193909290916020810190356401000000008111156102cb57600080fd5b8201836020820111156102dd57600080fd5b803590602001918460018302840111640100000000831117156102ff57600080fd5b509092509050610f39565b34801561031657600080fd5b506103876004803603602081101561032d57600080fd5b81019060208101813564010000000081111561034857600080fd5b82018360208201111561035a57600080fd5b8035906020019184600183028401116401000000008311171561037c57600080fd5b509092509050610f9d565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103c15781810151838201526020016103a9565b50505050905090810190601f1680156103ee5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561040857600080fd5b50610239600480360360c081101561041f57600080fd5b81019060208101813564010000000081111561043a57600080fd5b82018360208201111561044c57600080fd5b8035906020019184600183028401116401000000008311171561046e57600080fd5b91939092909160208101903564010000000081111561048c57600080fd5b82018360208201111561049e57600080fd5b803590602001918460018302840111640100000000831117156104c057600080fd5b9193909290916020810190356401000000008111156104de57600080fd5b8201836020820111156104f057600080fd5b8035906020019184600183028401116401000000008311171561051257600080fd5b91939092909160208101903564010000000081111561053057600080fd5b82018360208201111561054257600080fd5b8035906020019184600183028401116401000000008311171561056457600080fd5b91939092909160208101903564010000000081111561058257600080fd5b82018360208201111561059457600080fd5b803590602001918460018302840111640100000000831117156105b657600080fd5b91935091503573ffffffffffffffffffffffffffffffffffffffff16611055565b3480156105e357600080fd5b50610239600480360360408110156105fa57600080fd5b81019060208101813564010000000081111561061557600080fd5b82018360208201111561062757600080fd5b8035906020019184600183028401116401000000008311171561064957600080fd5b91939092909160208101903564010000000081111561066757600080fd5b82018360208201111561067957600080fd5b8035906020019184600183028401116401000000008311171561069b57600080fd5b5090925090506112c0565b3480156106b257600080fd5b50610239600480360360408110156106c957600080fd5b8101906020810181356401000000008111156106e457600080fd5b8201836020820111156106f657600080fd5b8035906020019184600183028401116401000000008311171561071857600080fd5b91939092909160208101903564010000000081111561073657600080fd5b82018360208201111561074857600080fd5b8035906020019184600183028401116401000000008311171561076a57600080fd5b50909250905061131a565b34801561078157600080fd5b506103876004803603602081101561079857600080fd5b8101906020810181356401000000008111156107b357600080fd5b8201836020820111156107c557600080fd5b803590602001918460018302840111640100000000831117156107e757600080fd5b509092509050611377565b3480156107fe57600080fd5b506102396004803603604081101561081557600080fd5b81019060208101813564010000000081111561083057600080fd5b82018360208201111561084257600080fd5b8035906020019184600183028401116401000000008311171561086457600080fd5b91939092909160208101903564010000000081111561088257600080fd5b82018360208201111561089457600080fd5b803590602001918460018302840111640100000000831117156108b657600080fd5b5090925090506113f8565b3480156108cd57600080fd5b50610387600480360360208110156108e457600080fd5b8101906020810181356401000000008111156108ff57600080fd5b82018360208201111561091157600080fd5b8035906020019184600183028401116401000000008311171561093357600080fd5b509092509050611455565b34801561094a57600080fd5b506109536114d5565b60408051918252519081900360200190f35b34801561097157600080fd5b506109e26004803603602081101561098857600080fd5b8101906020810181356401000000008111156109a357600080fd5b8201836020820111156109b557600080fd5b803590602001918460018302840111640100000000831117156109d757600080fd5b5090925090506114dc565b6040518080602001806020018060200180602001806020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200186810386528c818151815260200191508051906020019080838360005b83811015610a61578181015183820152602001610a49565b50505050905090810190601f168015610a8e5780820380516001836020036101000a031916815260200191505b5086810385528b5181528b516020918201918d019080838360005b83811015610ac1578181015183820152602001610aa9565b50505050905090810190601f168015610aee5780820380516001836020036101000a031916815260200191505b5086810384528a5181528a516020918201918c019080838360005b83811015610b21578181015183820152602001610b09565b50505050905090810190601f168015610b4e5780820380516001836020036101000a031916815260200191505b5086810383528951815289516020918201918b019080838360005b83811015610b81578181015183820152602001610b69565b50505050905090810190601f168015610bae5780820380516001836020036101000a031916815260200191505b5086810382528851815288516020918201918a019080838360005b83811015610be1578181015183820152602001610bc9565b50505050905090810190601f168015610c0e5780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b348015610c3157600080fd5b5061017d6118ad565b348015610c4657600080fd5b5061038760048036036020811015610c5d57600080fd5b810190602081018135640100000000811115610c7857600080fd5b820183602082011115610c8a57600080fd5b80359060200191846001830284011164010000000083111715610cac57600080fd5b5090925090506118c9565b348015610cc357600080fd5b5061038760048036036020811015610cda57600080fd5b503567ffffffffffffffff1661194b565b348015610cf757600080fd5b5061038760048036036020811015610d0e57600080fd5b810190602081018135640100000000811115610d2957600080fd5b820183602082011115610d3b57600080fd5b80359060200191846001830284011164010000000083111715610d5d57600080fd5b509092509050611a00565b348015610d7457600080fd5b5061023960048036036040811015610d8b57600080fd5b810190602081018135640100000000811115610da657600080fd5b820183602082011115610db857600080fd5b80359060200191846001830284011164010000000083111715610dda57600080fd5b919390929091602081019035640100000000811115610df857600080fd5b820183602082011115610e0a57600080fd5b80359060200191846001830284011164010000000083111715610e2c57600080fd5b509092509050611a7d565b348015610e4357600080fd5b5061038760048036036020811015610e5a57600080fd5b5035611ada565b60006001838360405180838380828437919091019485525050604051928390036020019092206005015473ffffffffffffffffffffffffffffffffffffffff169250505092915050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610ecf57600080fd5b80600184846040518083838082843791909101948552505060405192839003602001909220600501805473ffffffffffffffffffffffffffffffffffffffff9490941673ffffffffffffffffffffffffffffffffffffffff19909416939093179092555050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610f5d57600080fd5b81816001868660405180838380828437808301925050509250505090815260200160405180910390206001019190610f96929190611b81565b5050505050565b606060018383604051808383808284379190910194855250506040805160209481900385018120600301805460026001821615610100026000190190911604601f810187900487028301870190935282825290949093509091508301828280156110485780601f1061101d57610100808354040283529160200191611048565b820191906000526020600020905b81548152906001019060200180831161102b57829003601f168201915b5050505050905092915050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461107957600080fd5b611081611bff565b89898080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050506080820152604080516020601f8a01819004810282018101909252888152908990899081908401838280828437600092019190915250505090825250604080516020601f88018190048102820181019092528681529087908790819084018382808284376000920191909152505050506060820152604080516020601f860181900481028201810190925284815290859085908190840183828082843760009201919091525050505060408083019190915273ffffffffffffffffffffffffffffffffffffffff831660a08301525181906001908e908e9080838380828437919091019485525050604051602093819003840190208451805191946111c194508593500190611c4c565b5060208281015180516111da9260018501920190611c4c565b50604082015180516111f6916002840191602090910190611c4c565b5060608201518051611212916003840191602090910190611c4c565b506080820151805161122e916004840191602090910190611c4c565b5060a091909101516005909101805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff90921691909117905560028054600181018083556000929092526112b0907f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace018e8e611b81565b5050505050505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146112e457600080fd5b8181600186866040518083838082843791909101948552505060405192839003602001909220610f969490939092509050611b81565b60005473ffffffffffffffffffffffffffffffffffffffff16331461133e57600080fd5b81816001868660405180838380828437808301925050509250505090815260200160405180910390206002019190610f96929190611b81565b60606001838360405180838380828437919091019485525050604080516020948190038501812060029081018054600181161561010002600019011691909104601f810187900487028301870190935282825290949093509091508301828280156110485780601f1061101d57610100808354040283529160200191611048565b60005473ffffffffffffffffffffffffffffffffffffffff16331461141c57600080fd5b81816001868660405180838380828437808301925050509250505090815260200160405180910390206004019190610f96929190611b81565b606060018383604051808383808284379190910194855250506040805160209481900385018120600401805460026001821615610100026000190190911604601f810187900487028301870190935282825290949093509091508301828280156110485780601f1061101d57610100808354040283529160200191611048565b6002545b90565b6060806060806060600060018888604051808383808284379190910194855250506040805160209481900385018120805460026001821615610100026000190190911604601f8101879004870283018701909352828252909490935090915083018282801561158c5780601f106115615761010080835404028352916020019161158c565b820191906000526020600020905b81548152906001019060200180831161156f57829003601f168201915b50505050509450600188886040518083838082843791909101948552505060408051602094819003850181206001908101805460029281161561010002600019011691909104601f8101879004870283018701909352828252909490935090915083018282801561163e5780601f106116135761010080835404028352916020019161163e565b820191906000526020600020905b81548152906001019060200180831161162157829003601f168201915b505050505093506001888860405180838380828437919091019485525050604080516020948190038501812060029081018054600181161561010002600019011691909104601f810187900487028301870190935282825290949093509091508301828280156116ef5780601f106116c4576101008083540402835291602001916116ef565b820191906000526020600020905b8154815290600101906020018083116116d257829003601f168201915b5050505050925060018888604051808383808284379190910194855250506040805160209481900385018120600301805460026001821615610100026000190190911604601f8101879004870283018701909352828252909490935090915083018282801561179f5780601f106117745761010080835404028352916020019161179f565b820191906000526020600020905b81548152906001019060200180831161178257829003601f168201915b5050505050915060018888604051808383808284379190910194855250506040805160209481900385018120600401805460026001821615610100026000190190911604601f8101879004870283018701909352828252909490935090915083018282801561184f5780601f106118245761010080835404028352916020019161184f565b820191906000526020600020905b81548152906001019060200180831161183257829003601f168201915b5050505050955060018888604051808383808284378083019250505092505050908152602001604051809103902060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690509295509295509295565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b6060600183836040518083838082843791909101948552505060408051602094819003850181206001908101805460029281161561010002600019011691909104601f810187900487028301870190935282825290949093509091508301828280156110485780601f1061101d57610100808354040283529160200191611048565b606060028267ffffffffffffffff1681548110151561196657fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156119f45780601f106119c9576101008083540402835291602001916119f4565b820191906000526020600020905b8154815290600101906020018083116119d757829003601f168201915b50505050509050919050565b606060018383604051808383808284379190910194855250506040805160209481900385018120805460026001821615610100026000190190911604601f810187900487028301870190935282825290949093509091508301828280156110485780601f1061101d57610100808354040283529160200191611048565b60005473ffffffffffffffffffffffffffffffffffffffff163314611aa157600080fd5b81816001868660405180838380828437808301925050509250505090815260200160405180910390206003019190610f96929190611b81565b6002805482908110611ae857fe5b600091825260209182902001805460408051601f6002600019610100600187161502019094169390930492830185900485028101850190915281815293509091830182828015611b795780601f10611b4e57610100808354040283529160200191611b79565b820191906000526020600020905b815481529060010190602001808311611b5c57829003601f168201915b505050505081565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611bc25782800160ff19823516178555611bef565b82800160010185558215611bef579182015b82811115611bef578235825591602001919060010190611bd4565b50611bfb929150611cba565b5090565b60c0604051908101604052806060815260200160608152602001606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611c8d57805160ff1916838001178555611bef565b82800160010185558215611bef579182015b82811115611bef578251825591602001919060010190611c9f565b6114d991905b80821115611bfb5760008155600101611cc056fea165627a7a72305820280121a46d07ebf27ca908627a2cf711be6780410e9d16813d07d2bcd55779500029";

    public static final String FUNC_OWNER = "owner";

    public static final String FUNC_CODES = "codes";

    public static final String FUNC_REGISTERISSUER = "registerIssuer";

    public static final String FUNC_GETISSUER = "getIssuer";

    public static final String FUNC_SETPUBLICKEY = "setPublicKey";

    public static final String FUNC_SETVERIFIERAPILINK = "setVerifierApiLink";

    public static final String FUNC_SETISSUERAPILINK = "setIssuerApiLink";

    public static final String FUNC_SETFRONTENDLINK = "setFrontendLink";

    public static final String FUNC_SETNAME = "setName";

    public static final String FUNC_SETISSUERADDRESS = "setIssuerAddress";

    public static final String FUNC_GETPUBLICKEY = "getPublicKey";

    public static final String FUNC_GETVERIFIERAPILINK = "getVerifierApiLink";

    public static final String FUNC_GETISSUERAPILINK = "getIssuerApiLink";

    public static final String FUNC_GETFRONTENDLINK = "getFrontendLink";

    public static final String FUNC_GETNAME = "getName";

    public static final String FUNC_GETBANKCODEBYID = "getBankCodeById";

    public static final String FUNC_GETISSUERADDRESS = "getIssuerAddress";

    public static final String FUNC_GETNUMBEROFISSUERS = "getNumberOfIssuers";

    protected static final HashMap<String, String> _addresses;

    static {
        _addresses = new HashMap<String, String>();
    }

    @Deprecated
    protected IssuersRegistry(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected IssuersRegistry(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected IssuersRegistry(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected IssuersRegistry(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<Address> owner() {
        final Function function = new Function(FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Utf8String> codes(Uint256 param0) {
        final Function function = new Function(FUNC_CODES, 
                Arrays.<Type>asList(param0), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<TransactionReceipt> registerIssuer(Utf8String _bankCode, Utf8String _name, Utf8String _publicKey, Utf8String _frontendLink, Utf8String _issuerApiLink, Address _issuerAddress) {
        final Function function = new Function(
                FUNC_REGISTERISSUER, 
                Arrays.<Type>asList(_bankCode, _name, _publicKey, _frontendLink, _issuerApiLink, _issuerAddress), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Tuple6<Utf8String, Utf8String, Utf8String, Utf8String, Utf8String, Address>> getIssuer(Utf8String _bankCode) {
        final Function function = new Function(FUNC_GETISSUER, 
                Arrays.<Type>asList(_bankCode),
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}));
        return new RemoteCall<Tuple6<Utf8String, Utf8String, Utf8String, Utf8String, Utf8String, Address>>(
                new Callable<Tuple6<Utf8String, Utf8String, Utf8String, Utf8String, Utf8String, Address>>() {
                    @Override
                    public Tuple6<Utf8String, Utf8String, Utf8String, Utf8String, Utf8String, Address> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple6<Utf8String, Utf8String, Utf8String, Utf8String, Utf8String, Address>(
                                (Utf8String) results.get(0), 
                                (Utf8String) results.get(1), 
                                (Utf8String) results.get(2), 
                                (Utf8String) results.get(3), 
                                (Utf8String) results.get(4), 
                                (Address) results.get(5));
                    }
                });
    }

    public RemoteCall<TransactionReceipt> setPublicKey(Utf8String _bankCode, Utf8String _publicKey) {
        final Function function = new Function(
                FUNC_SETPUBLICKEY, 
                Arrays.<Type>asList(_bankCode, _publicKey), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setVerifierApiLink(Utf8String _bankCode, Utf8String _verifierApiLink) {
        final Function function = new Function(
                FUNC_SETVERIFIERAPILINK, 
                Arrays.<Type>asList(_bankCode, _verifierApiLink), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setIssuerApiLink(Utf8String _bankCode, Utf8String _issuerApiLink) {
        final Function function = new Function(
                FUNC_SETISSUERAPILINK, 
                Arrays.<Type>asList(_bankCode, _issuerApiLink), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setFrontendLink(Utf8String _bankCode, Utf8String _frontendLink) {
        final Function function = new Function(
                FUNC_SETFRONTENDLINK, 
                Arrays.<Type>asList(_bankCode, _frontendLink), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setName(Utf8String _bankCode, Utf8String _name) {
        final Function function = new Function(
                FUNC_SETNAME, 
                Arrays.<Type>asList(_bankCode, _name), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setIssuerAddress(Utf8String _bankCode, Address _issuerAddress) {
        final Function function = new Function(
                FUNC_SETISSUERADDRESS, 
                Arrays.<Type>asList(_bankCode, _issuerAddress), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Utf8String> getPublicKey(Utf8String _bankCode, Address _issuerAddress) {
        final Function function = new Function(FUNC_GETPUBLICKEY, 
                Arrays.<Type>asList(_bankCode, _issuerAddress), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Utf8String> getVerifierApiLink(Utf8String _bankCode) {
        final Function function = new Function(FUNC_GETVERIFIERAPILINK, 
                Arrays.<Type>asList(_bankCode), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Utf8String> getIssuerApiLink(Utf8String _bankCode) {
        final Function function = new Function(FUNC_GETISSUERAPILINK, 
                Arrays.<Type>asList(_bankCode), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Utf8String> getFrontendLink(Utf8String _bankCode) {
        final Function function = new Function(FUNC_GETFRONTENDLINK, 
                Arrays.<Type>asList(_bankCode), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Utf8String> getName(Utf8String _bankCode) {
        final Function function = new Function(FUNC_GETNAME, 
                Arrays.<Type>asList(_bankCode), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Utf8String> getBankCodeById(Uint64 _index) {
        final Function function = new Function(FUNC_GETBANKCODEBYID, 
                Arrays.<Type>asList(_index), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Address> getIssuerAddress(Utf8String _bankCode) {
        final Function function = new Function(FUNC_GETISSUERADDRESS, 
                Arrays.<Type>asList(_bankCode), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Uint256> getNumberOfIssuers() {
        final Function function = new Function(FUNC_GETNUMBEROFISSUERS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    @Deprecated
    public static IssuersRegistry load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new IssuersRegistry(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static IssuersRegistry load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new IssuersRegistry(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static IssuersRegistry load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new IssuersRegistry(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static IssuersRegistry load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new IssuersRegistry(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<IssuersRegistry> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(IssuersRegistry.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<IssuersRegistry> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(IssuersRegistry.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<IssuersRegistry> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(IssuersRegistry.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<IssuersRegistry> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(IssuersRegistry.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    protected String getStaticDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static String getPreviouslyDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }
}
