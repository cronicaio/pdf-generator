package io.cronica.api.pdfgenerator.component.wrapper;

import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint64;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple5;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.Callable;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.1.0.
 */
public class IssuersRegistry extends Contract {
    private static final String BINARY = "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506122a3806100536000396000f3fe6080604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631da48bd0146100f65780633333ab00146101d157806342ac87cf146102d057806349143c4b146103ab5780634a7c6ea0146104865780635c707f07146105855780636932cf811461066057806369c05a991461075f578063788877161461078a57806380793ab8146109645780638da5cb5b14610c135780639e75528a14610c6a578063b864476b14610d69578063bff9082114610e27578063dcab453314610f26578063e86613a714611001578063f2fde38b146110b5575b600080fd5b34801561010257600080fd5b506101cf6004803603604081101561011957600080fd5b810190808035906020019064010000000081111561013657600080fd5b82018360208201111561014857600080fd5b8035906020019184600183028401116401000000008311171561016a57600080fd5b90919293919293908035906020019064010000000081111561018b57600080fd5b82018360208201111561019d57600080fd5b803590602001918460018302840111640100000000831117156101bf57600080fd5b9091929391929390505050611106565b005b3480156101dd57600080fd5b50610255600480360360208110156101f457600080fd5b810190808035906020019064010000000081111561021157600080fd5b82018360208201111561022357600080fd5b8035906020019184600183028401116401000000008311171561024557600080fd5b90919293919293905050506111a1565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561029557808201518184015260208101905061027a565b50505050905090810190601f1680156102c25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102dc57600080fd5b506103a9600480360360408110156102f357600080fd5b810190808035906020019064010000000081111561031057600080fd5b82018360208201111561032257600080fd5b8035906020019184600183028401116401000000008311171561034457600080fd5b90919293919293908035906020019064010000000081111561036557600080fd5b82018360208201111561037757600080fd5b8035906020019184600183028401116401000000008311171561039957600080fd5b909192939192939050505061126e565b005b3480156103b757600080fd5b50610484600480360360408110156103ce57600080fd5b81019080803590602001906401000000008111156103eb57600080fd5b8201836020820111156103fd57600080fd5b8035906020019184600183028401116401000000008311171561041f57600080fd5b90919293919293908035906020019064010000000081111561044057600080fd5b82018360208201111561045257600080fd5b8035906020019184600183028401116401000000008311171561047457600080fd5b9091929391929390505050611309565b005b34801561049257600080fd5b5061050a600480360360208110156104a957600080fd5b81019080803590602001906401000000008111156104c657600080fd5b8201836020820111156104d857600080fd5b803590602001918460018302840111640100000000831117156104fa57600080fd5b90919293919293905050506113a4565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561054a57808201518184015260208101905061052f565b50505050905090810190601f1680156105775780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561059157600080fd5b5061065e600480360360408110156105a857600080fd5b81019080803590602001906401000000008111156105c557600080fd5b8201836020820111156105d757600080fd5b803590602001918460018302840111640100000000831117156105f957600080fd5b90919293919293908035906020019064010000000081111561061a57600080fd5b82018360208201111561062c57600080fd5b8035906020019184600183028401116401000000008311171561064e57600080fd5b9091929391929390505050611471565b005b34801561066c57600080fd5b506106e46004803603602081101561068357600080fd5b81019080803590602001906401000000008111156106a057600080fd5b8201836020820111156106b257600080fd5b803590602001918460018302840111640100000000831117156106d457600080fd5b909192939192939050505061150c565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610724578082015181840152602081019050610709565b50505050905090810190601f1680156107515780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561076b57600080fd5b506107746115d9565b6040518082815260200191505060405180910390f35b34801561079657600080fd5b50610962600480360360a08110156107ad57600080fd5b81019080803590602001906401000000008111156107ca57600080fd5b8201836020820111156107dc57600080fd5b803590602001918460018302840111640100000000831117156107fe57600080fd5b90919293919293908035906020019064010000000081111561081f57600080fd5b82018360208201111561083157600080fd5b8035906020019184600183028401116401000000008311171561085357600080fd5b90919293919293908035906020019064010000000081111561087457600080fd5b82018360208201111561088657600080fd5b803590602001918460018302840111640100000000831117156108a857600080fd5b9091929391929390803590602001906401000000008111156108c957600080fd5b8201836020820111156108db57600080fd5b803590602001918460018302840111640100000000831117156108fd57600080fd5b90919293919293908035906020019064010000000081111561091e57600080fd5b82018360208201111561093057600080fd5b8035906020019184600183028401116401000000008311171561095257600080fd5b90919293919293905050506115e6565b005b34801561097057600080fd5b506109e86004803603602081101561098757600080fd5b81019080803590602001906401000000008111156109a457600080fd5b8201836020820111156109b657600080fd5b803590602001918460018302840111640100000000831117156109d857600080fd5b9091929391929390505050611888565b60405180806020018060200180602001806020018060200186810386528b818151815260200191508051906020019080838360005b83811015610a38578082015181840152602081019050610a1d565b50505050905090810190601f168015610a655780820380516001836020036101000a031916815260200191505b5086810385528a818151815260200191508051906020019080838360005b83811015610a9e578082015181840152602081019050610a83565b50505050905090810190601f168015610acb5780820380516001836020036101000a031916815260200191505b50868103845289818151815260200191508051906020019080838360005b83811015610b04578082015181840152602081019050610ae9565b50505050905090810190601f168015610b315780820380516001836020036101000a031916815260200191505b50868103835288818151815260200191508051906020019080838360005b83811015610b6a578082015181840152602081019050610b4f565b50505050905090810190601f168015610b975780820380516001836020036101000a031916815260200191505b50868103825287818151815260200191508051906020019080838360005b83811015610bd0578082015181840152602081019050610bb5565b50505050905090810190601f168015610bfd5780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b348015610c1f57600080fd5b50610c28611c73565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610c7657600080fd5b50610cee60048036036020811015610c8d57600080fd5b8101908080359060200190640100000000811115610caa57600080fd5b820183602082011115610cbc57600080fd5b80359060200191846001830284011164010000000083111715610cde57600080fd5b9091929391929390505050611c98565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d2e578082015181840152602081019050610d13565b50505050905090810190601f168015610d5b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610d7557600080fd5b50610dac60048036036020811015610d8c57600080fd5b81019080803567ffffffffffffffff169060200190929190505050611d65565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610dec578082015181840152602081019050610dd1565b50505050905090810190601f168015610e195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610e3357600080fd5b50610eab60048036036020811015610e4a57600080fd5b8101908080359060200190640100000000811115610e6757600080fd5b820183602082011115610e7957600080fd5b80359060200191846001830284011164010000000083111715610e9b57600080fd5b9091929391929390505050611e2a565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610eeb578082015181840152602081019050610ed0565b50505050905090810190601f168015610f185780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610f3257600080fd5b50610fff60048036036040811015610f4957600080fd5b8101908080359060200190640100000000811115610f6657600080fd5b820183602082011115610f7857600080fd5b80359060200191846001830284011164010000000083111715610f9a57600080fd5b909192939192939080359060200190640100000000811115610fbb57600080fd5b820183602082011115610fcd57600080fd5b80359060200191846001830284011164010000000083111715610fef57600080fd5b9091929391929390505050611ef7565b005b34801561100d57600080fd5b5061103a6004803603602081101561102457600080fd5b8101908080359060200190929190505050611f92565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561107a57808201518184015260208101905061105f565b50505050905090810190601f1680156110a75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156110c157600080fd5b50611104600480360360208110156110d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061204d565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561116157600080fd5b8181600186866040518083838082843780830192505050925050509081526020016040518091039020600101919061119a929190612122565b5050505050565b60606001838360405180838380828437808301925050509250505090815260200160405180910390206003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112615780601f1061123657610100808354040283529160200191611261565b820191906000526020600020905b81548152906001019060200180831161124457829003601f168201915b5050505050905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112c957600080fd5b81816001868660405180838380828437808301925050509250505090815260200160405180910390206000019190611302929190612122565b5050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561136457600080fd5b8181600186866040518083838082843780830192505050925050509081526020016040518091039020600201919061139d929190612122565b5050505050565b60606001838360405180838380828437808301925050509250505090815260200160405180910390206002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114645780601f1061143957610100808354040283529160200191611464565b820191906000526020600020905b81548152906001019060200180831161144757829003601f168201915b5050505050905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156114cc57600080fd5b81816001868660405180838380828437808301925050509250505090815260200160405180910390206004019190611505929190612122565b5050505050565b60606001838360405180838380828437808301925050509250505090815260200160405180910390206004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115cc5780601f106115a1576101008083540402835291602001916115cc565b820191906000526020600020905b8154815290600101906020018083116115af57829003601f168201915b5050505050905092915050565b6000600280549050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561164157600080fd5b6116496121a2565b88888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816080018190525086868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816000018190525084848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816060018190525082828080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081604001819052508060018c8c604051808383808284378083019250505092505050908152602001604051809103902060008201518160000190805190602001906117c19291906121d2565b5060208201518160010190805190602001906117de9291906121d2565b5060408201518160020190805190602001906117fb9291906121d2565b5060608201518160030190805190602001906118189291906121d2565b5060808201518160040190805190602001906118359291906121d2565b5090505060028b8b90918060018154018082558091505090600182039060005260206000200160009091929390919293909192909192509190611879929190612122565b50505050505050505050505050565b60608060608060606001878760405180838380828437808301925050509250505090815260200160405180910390206000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561194e5780601f106119235761010080835404028352916020019161194e565b820191906000526020600020905b81548152906001019060200180831161193157829003601f168201915b505050505093506001878760405180838380828437808301925050509250505090815260200160405180910390206001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a135780601f106119e857610100808354040283529160200191611a13565b820191906000526020600020905b8154815290600101906020018083116119f657829003601f168201915b505050505092506001878760405180838380828437808301925050509250505090815260200160405180910390206002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ad85780601f10611aad57610100808354040283529160200191611ad8565b820191906000526020600020905b815481529060010190602001808311611abb57829003601f168201915b505050505091506001878760405180838380828437808301925050509250505090815260200160405180910390206003018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b9d5780601f10611b7257610100808354040283529160200191611b9d565b820191906000526020600020905b815481529060010190602001808311611b8057829003601f168201915b505050505090506001878760405180838380828437808301925050509250505090815260200160405180910390206004018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c625780601f10611c3757610100808354040283529160200191611c62565b820191906000526020600020905b815481529060010190602001808311611c4557829003601f168201915b505050505094509295509295909350565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606001838360405180838380828437808301925050509250505090815260200160405180910390206001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611d585780601f10611d2d57610100808354040283529160200191611d58565b820191906000526020600020905b815481529060010190602001808311611d3b57829003601f168201915b5050505050905092915050565b606060028267ffffffffffffffff16815481101515611d8057fe5b906000526020600020018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e1e5780601f10611df357610100808354040283529160200191611e1e565b820191906000526020600020905b815481529060010190602001808311611e0157829003601f168201915b50505050509050919050565b60606001838360405180838380828437808301925050509250505090815260200160405180910390206000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611eea5780601f10611ebf57610100808354040283529160200191611eea565b820191906000526020600020905b815481529060010190602001808311611ecd57829003601f168201915b5050505050905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611f5257600080fd5b81816001868660405180838380828437808301925050509250505090815260200160405180910390206003019190611f8b929190612122565b5050505050565b600281815481101515611fa157fe5b906000526020600020016000915090508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120455780601f1061201a57610100808354040283529160200191612045565b820191906000526020600020905b81548152906001019060200180831161202857829003601f168201915b505050505081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156120a857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151561211f57806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061216357803560ff1916838001178555612191565b82800160010185558215612191579182015b82811115612190578235825591602001919060010190612175565b5b50905061219e9190612252565b5090565b60a06040519081016040528060608152602001606081526020016060815260200160608152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061221357805160ff1916838001178555612241565b82800160010185558215612241579182015b82811115612240578251825591602001919060010190612225565b5b50905061224e9190612252565b5090565b61227491905b80821115612270576000816000905550600101612258565b5090565b9056fea165627a7a723058200b0cc25bccc855f2b7c84b197e5cf48aa71cf66b6f47303224ab0497e193ce870029";

    public static final String FUNC_OWNER = "owner";

    public static final String FUNC_CODES = "codes";

    public static final String FUNC_TRANSFEROWNERSHIP = "transferOwnership";

    public static final String FUNC_REGISTERISSUER = "registerIssuer";

    public static final String FUNC_GETISSUER = "getIssuer";

    public static final String FUNC_SETPUBLICKEY = "setPublicKey";

    public static final String FUNC_SETVERIFIERAPILINK = "setVerifierApiLink";

    public static final String FUNC_SETISSUERAPILINK = "setIssuerApiLink";

    public static final String FUNC_SETFRONTENDLINK = "setFrontendLink";

    public static final String FUNC_SETNAME = "setName";

    public static final String FUNC_GETPUBLICKEY = "getPublicKey";

    public static final String FUNC_GETVERIFIERAPILINK = "getVerifierApiLink";

    public static final String FUNC_GETISSUERAPILINK = "getIssuerApiLink";

    public static final String FUNC_GETFRONTENDLINK = "getFrontendLink";

    public static final String FUNC_GETNAME = "getName";

    public static final String FUNC_GETBANKCODEBYID = "getBankCodeById";

    public static final String FUNC_GETNUMBEROFISSUERS = "getNumberOfIssuers";

    protected static final HashMap<String, String> _addresses;

    static {
        _addresses = new HashMap<String, String>();
    }

    @Deprecated
    protected IssuersRegistry(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected IssuersRegistry(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected IssuersRegistry(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected IssuersRegistry(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<Address> owner() {
        final Function function = new Function(FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Utf8String> codes(Uint256 param0) {
        final Function function = new Function(FUNC_CODES, 
                Arrays.<Type>asList(param0), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<TransactionReceipt> transferOwnership(Address newOwner) {
        final Function function = new Function(
                FUNC_TRANSFEROWNERSHIP, 
                Arrays.<Type>asList(newOwner), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> registerIssuer(Utf8String _bankCode, Utf8String _name, Utf8String _publicKey, Utf8String _frontendLink, Utf8String _issuerApiLink) {
        final Function function = new Function(
                FUNC_REGISTERISSUER, 
                Arrays.<Type>asList(_bankCode, _name, _publicKey, _frontendLink, _issuerApiLink), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Tuple5<Utf8String, Utf8String, Utf8String, Utf8String, Utf8String>> getIssuer(Utf8String _bankCode) {
        final Function function = new Function(FUNC_GETISSUER, 
                Arrays.<Type>asList(_bankCode), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteCall<Tuple5<Utf8String, Utf8String, Utf8String, Utf8String, Utf8String>>(
                new Callable<Tuple5<Utf8String, Utf8String, Utf8String, Utf8String, Utf8String>>() {
                    @Override
                    public Tuple5<Utf8String, Utf8String, Utf8String, Utf8String, Utf8String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<Utf8String, Utf8String, Utf8String, Utf8String, Utf8String>(
                                (Utf8String) results.get(0), 
                                (Utf8String) results.get(1), 
                                (Utf8String) results.get(2), 
                                (Utf8String) results.get(3), 
                                (Utf8String) results.get(4));
                    }
                });
    }

    public RemoteCall<TransactionReceipt> setPublicKey(Utf8String _bankCode, Utf8String _publicKey) {
        final Function function = new Function(
                FUNC_SETPUBLICKEY, 
                Arrays.<Type>asList(_bankCode, _publicKey), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setVerifierApiLink(Utf8String _bankCode, Utf8String _verifierApiLink) {
        final Function function = new Function(
                FUNC_SETVERIFIERAPILINK, 
                Arrays.<Type>asList(_bankCode, _verifierApiLink), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setIssuerApiLink(Utf8String _bankCode, Utf8String _issuerApiLink) {
        final Function function = new Function(
                FUNC_SETISSUERAPILINK, 
                Arrays.<Type>asList(_bankCode, _issuerApiLink), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setFrontendLink(Utf8String _bankCode, Utf8String _frontendLink) {
        final Function function = new Function(
                FUNC_SETFRONTENDLINK, 
                Arrays.<Type>asList(_bankCode, _frontendLink), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setName(Utf8String _bankCode, Utf8String _name) {
        final Function function = new Function(
                FUNC_SETNAME, 
                Arrays.<Type>asList(_bankCode, _name), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Utf8String> getPublicKey(Utf8String _bankCode) {
        final Function function = new Function(FUNC_GETPUBLICKEY, 
                Arrays.<Type>asList(_bankCode), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Utf8String> getVerifierApiLink(Utf8String _bankCode) {
        final Function function = new Function(FUNC_GETVERIFIERAPILINK, 
                Arrays.<Type>asList(_bankCode), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Utf8String> getIssuerApiLink(Utf8String _bankCode) {
        final Function function = new Function(FUNC_GETISSUERAPILINK, 
                Arrays.<Type>asList(_bankCode), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Utf8String> getFrontendLink(Utf8String _bankCode) {
        final Function function = new Function(FUNC_GETFRONTENDLINK, 
                Arrays.<Type>asList(_bankCode), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Utf8String> getName(Utf8String _bankCode) {
        final Function function = new Function(FUNC_GETNAME, 
                Arrays.<Type>asList(_bankCode), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Utf8String> getBankCodeById(Uint64 _index) {
        final Function function = new Function(FUNC_GETBANKCODEBYID, 
                Arrays.<Type>asList(_index), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    public RemoteCall<Uint256> getNumberOfIssuers() {
        final Function function = new Function(FUNC_GETNUMBEROFISSUERS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function);
    }

    @Deprecated
    public static IssuersRegistry load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new IssuersRegistry(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static IssuersRegistry load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new IssuersRegistry(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static IssuersRegistry load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new IssuersRegistry(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static IssuersRegistry load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new IssuersRegistry(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<IssuersRegistry> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(IssuersRegistry.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<IssuersRegistry> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(IssuersRegistry.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<IssuersRegistry> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(IssuersRegistry.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<IssuersRegistry> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(IssuersRegistry.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    protected String getStaticDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static String getPreviouslyDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }
}
